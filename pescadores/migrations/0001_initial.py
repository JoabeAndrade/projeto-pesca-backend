# Generated by Django 5.2.1 on 2025-08-14 14:54

import django.core.validators
import django.db.models.deletion
import pescadores.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlternativaRenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100, unique=True, verbose_name='descrição')),
            ],
            options={
                'verbose_name': 'alternativa de renda',
                'verbose_name_plural': 'alternativas de renda',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='AreaPesca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'areas pesca',
            },
        ),
        migrations.CreateModel(
            name='ArtePesca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'artes pesca',
            },
        ),
        migrations.CreateModel(
            name='AtividadeAnterior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='BeneficioColonia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'benefício da colônia',
                'verbose_name_plural': 'benefícios da colônia',
            },
        ),
        migrations.CreateModel(
            name='CompradorPescado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'comprador do pescado',
                'verbose_name_plural': 'compradores do pescado',
            },
        ),
        migrations.CreateModel(
            name='Comunidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CursoBeneficiamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'curso de beneficiamento',
                'verbose_name_plural': 'cursos de beneficiamento',
            },
        ),
        migrations.CreateModel(
            name='DestinoPescado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'destino do pescado',
                'verbose_name_plural': 'destinos do pescado',
            },
        ),
        migrations.CreateModel(
            name='DestinoSobras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'destino das sobras',
                'verbose_name_plural': 'destinos das sobras',
            },
        ),
        migrations.CreateModel(
            name='DificuldadeArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'dificuldade da área',
                'verbose_name_plural': 'dificuldades da área',
            },
        ),
        migrations.CreateModel(
            name='DificuldadePagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'dificuldade de pagamento',
                'verbose_name_plural': 'dificuldades de pagamento',
            },
        ),
        migrations.CreateModel(
            name='EmissorRgp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'emissor do RGP',
                'verbose_name_plural': 'emissores de RGP',
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logradouro', models.CharField(max_length=100)),
                ('numero', models.CharField(max_length=10)),
                ('bairro', models.CharField(max_length=50)),
                ('cep', models.CharField(blank=True, max_length=8, validators=[django.core.validators.MinLengthValidator(8), pescadores.validators.only_numeric_chars])),
                ('complemento', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='EstadoCivil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'estados civis',
            },
        ),
        migrations.CreateModel(
            name='FonteRendaDuranteDefeso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'fonte de renda durante o defeso',
                'verbose_name_plural': 'fontes de renda durante o defeso',
            },
        ),
        migrations.CreateModel(
            name='FornecedorInsumos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'fornecedor de insumos',
                'verbose_name_plural': 'fornecedores de insumos',
            },
        ),
        migrations.CreateModel(
            name='FrequenciaConsumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'frequencia de consumo',
                'verbose_name_plural': 'frequencias de consumo',
            },
        ),
        migrations.CreateModel(
            name='FrequenciaPesca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'frequencia de pesca',
                'verbose_name_plural': 'frequencias de pesca',
            },
        ),
        migrations.CreateModel(
            name='GostariaFazerNaoFossePescador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True, verbose_name='descrição')),
            ],
            options={
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='HabilidadeOutraArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'habilidade em outra área',
                'verbose_name_plural': 'habilidades em outras áreas',
            },
        ),
        migrations.CreateModel(
            name='HorarioPesca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'horário de pesca',
                'verbose_name_plural': 'horários de pesca',
            },
        ),
        migrations.CreateModel(
            name='ItemEstruturaResidencial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'item de estrutura residencial',
                'verbose_name_plural': 'itens de estrutura residencial',
            },
        ),
        migrations.CreateModel(
            name='LocalTratamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'local de tratamento',
                'verbose_name_plural': 'locais de tratamento',
            },
        ),
        migrations.CreateModel(
            name='MotivacaoPesca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MotivoFilhoSeguirProfissao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True, verbose_name='descrição')),
            ],
            options={
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='MotivoNaoParticipouOficinas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True, verbose_name='descrição')),
            ],
            options={
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='OpiniaoOficinas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True, verbose_name='descrição')),
            ],
            options={
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='ProgramaSocial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Projeto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecursoParaCompraInsumos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True, verbose_name='descrição')),
            ],
            options={
                'verbose_name': 'recurso para compra de insumos',
                'verbose_name_plural': 'recursos para compra de insumos',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='RelacaoCompanhia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='RelacaoParentesco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'relação de parentesco',
                'verbose_name_plural': 'relações de parentesco',
            },
        ),
        migrations.CreateModel(
            name='RelacaoTutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TipoInsumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, unique=True, verbose_name='descrição')),
            ],
            options={
                'verbose_name': 'tipo de insumo',
                'verbose_name_plural': 'tipos de insumo',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='TipoResidencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'tipo de residência',
                'verbose_name_plural': 'tipos de residência',
            },
        ),
        migrations.CreateModel(
            name='TipoSeguroDefeso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'tipos seguro defeso',
            },
        ),
        migrations.CreateModel(
            name='Transporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UnidadeBeneficiamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'unidade de beneficiamento',
                'verbose_name_plural': 'unidades de beneficiamento',
            },
        ),
        migrations.CreateModel(
            name='Colonia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50)),
                ('comunidade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comunidades', to='pescadores.comunidade')),
                ('endereco_sede', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pescadores.endereco')),
            ],
        ),
        migrations.CreateModel(
            name='Associacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('endereco', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pescadores.endereco')),
            ],
            options={
                'verbose_name': 'associação',
                'verbose_name_plural': 'associações',
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('uf', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('nome', 'uf'), name='unique_city')],
            },
        ),
        migrations.AddField(
            model_name='endereco',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pescadores.municipio'),
        ),
        migrations.AddField(
            model_name='comunidade',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comunidades', to='pescadores.municipio'),
        ),
        migrations.CreateModel(
            name='Pescador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('sexo', models.CharField(blank=True, choices=[('m', 'Masculino'), ('f', 'Feminino'), ('n', 'Não binário')], max_length=1, null=True)),
                ('apelido', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(2)])),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('nome_pai', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(2)])),
                ('nome_mae', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(2)])),
                ('matricula_colonia', models.CharField(blank=True, max_length=20, null=True, validators=[pescadores.validators.only_numeric_chars])),
                ('data_inscricao_colonia', models.DateField(blank=True, null=True)),
                ('rg', models.CharField(blank=True, max_length=20, null=True)),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, validators=[pescadores.validators.only_numeric_chars, django.core.validators.MinLengthValidator(11)])),
                ('tipo_embarcacao', models.CharField(blank=True, choices=[('barco', 'Barco'), ('bote', 'Bote'), ('canoa', 'Canoa'), ('jangada', 'Jangada'), ('lancha', 'Lancha'), ('desembarcado', 'Desembarcado(a)')], max_length=20, null=True)),
                ('tamanho_embarcacao', models.CharField(blank=True, choices=[('pequeno', 'Pequeno'), ('medio', 'Médio'), ('grande', 'Grande')], max_length=20, null=True)),
                ('proprietario_embarcacao', models.BooleanField(blank=True, null=True)),
                ('escolaridade', models.CharField(blank=True, choices=[('fundamental_incompleto', 'Ensino fundamental incompleto'), ('fundamental_completo', 'Ensino fundamental completo'), ('medio_incompleto', 'Ensino médio incompleto'), ('medio_completo', 'Ensino médio completo'), ('superio_incompleto', 'Ensino superior incompleto'), ('superior_completo', 'Ensino superior completo')], max_length=30, null=True)),
                ('renda_mensal_pesca', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('outra_renda', models.CharField(blank=True, max_length=50, null=True)),
                ('ativo', models.BooleanField(default=True, null=True)),
                ('motivo_inatividade', models.TextField(blank=True, null=True)),
                ('data_cadastramento', models.DateField(blank=True, null=True)),
                ('falecido', models.BooleanField(default=False, null=True)),
                ('areas_pesca', models.ManyToManyField(blank=True, to='pescadores.areapesca')),
                ('artes_pesca', models.ManyToManyField(blank=True, to='pescadores.artepesca')),
                ('associacoes', models.ManyToManyField(blank=True, to='pescadores.associacao')),
                ('colonia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pescadores.colonia')),
                ('comunidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pescadores.comunidade')),
                ('endereco', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pescadores.endereco')),
                ('naturalidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pescadores.municipio')),
            ],
            options={
                'verbose_name_plural': 'pescadores',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='EspecieCapturadaDoPescador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('especie_capturada', models.CharField(choices=[('peixe', 'Peixes'), ('camarao', 'Camarão'), ('marisco', 'Marisco'), ('outras', 'Outras')], max_length=10, null=True)),
                ('pescador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='especies_capturadas', to='pescadores.pescador')),
            ],
        ),
        migrations.CreateModel(
            name='Dependente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relacao', models.CharField(choices=[('conjuge_companheira', 'Cônjuge ou companheiro(a)'), ('filhos_enteados', 'Filhos(as) ou enteados(as)'), ('irmaos_netos_bisnetos', 'Irmãos(ãs), netos(as) ou bisnetos(as)'), ('pais_avos_bisavos', 'Pais, avós ou bisavós'), ('sogro', 'Sogro(a)'), ('incapazes', 'Incapaz(es)')], max_length=30)),
                ('quantidade', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('pescador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependentes', to='pescadores.pescador')),
            ],
        ),
        migrations.CreateModel(
            name='PescadorEspecialista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_filhos', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('reside_no_municipio', models.BooleanField(blank=True, null=True)),
                ('desde_quando_reside_no_municipio', models.DateField(blank=True, null=True)),
                ('quantidade_moradores_na_casa', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('quando_deixou_sustentar_familia_apenas_com_pesca', models.DateField(blank=True, null=True)),
                ('estacao_maior_renda', models.CharField(blank=True, choices=[('v', 'Verão'), ('i', 'Inverno')], max_length=1)),
                ('valor_maior_renda', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('estacao_menor_renda', models.CharField(blank=True, choices=[('v', 'Verão'), ('i', 'Inverno')], max_length=1)),
                ('valor_menor_renda', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('recebe_seguro_defeso', models.BooleanField(blank=True, null=True)),
                ('quando_comecou', models.DateField(blank=True, null=True)),
                ('mora_onde_pesca', models.BooleanField(blank=True, null=True)),
                ('pesca_acompanhado', models.BooleanField(blank=True, null=True)),
                ('pesca_embarcado', models.BooleanField(blank=True, null=True)),
                ('quantidade_parentes_pescadores', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('duracao_pescaria_dias', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('duracao_pescaria_horas', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(24)])),
                ('data_ultima_pescaria', models.DateField(blank=True, null=True)),
                ('vinculado_unidade_beneficiamento', models.BooleanField(blank=True, null=True)),
                ('fez_curso_beneficiamento', models.BooleanField(blank=True, null=True)),
                ('consegue_pagar_colonia_mensalmente', models.BooleanField(blank=True, null=True)),
                ('possui_rgp', models.BooleanField(blank=True, null=True)),
                ('possui_habilidade_outra_area', models.BooleanField(blank=True, null=True)),
                ('possui_alternativas_renda', models.BooleanField(blank=True, null=True)),
                ('gostaria_filhos_seguissem_profissao', models.BooleanField(blank=True, null=True)),
                ('grau_dependencia_pesca', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ja_participou_oficinas', models.BooleanField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('alternativas_renda', models.ManyToManyField(blank=True, to='pescadores.alternativarenda')),
                ('atividade_anterior', models.ManyToManyField(blank=True, to='pescadores.atividadeanterior')),
                ('beneficios_colonia', models.ManyToManyField(blank=True, to='pescadores.beneficiocolonia')),
                ('comprador_pescado', models.ManyToManyField(blank=True, to='pescadores.compradorpescado')),
                ('cursos_beneficiamento', models.ManyToManyField(blank=True, to='pescadores.cursobeneficiamento')),
                ('destino_pescado', models.ManyToManyField(blank=True, to='pescadores.destinopescado')),
                ('destino_sobras', models.ManyToManyField(blank=True, to='pescadores.destinosobras')),
                ('dificuldades_area', models.ManyToManyField(blank=True, to='pescadores.dificuldadearea')),
                ('dificuldades_pagamento', models.ManyToManyField(blank=True, to='pescadores.dificuldadepagamento')),
                ('emissor_rgp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pescadores.emissorrgp')),
                ('estado_civil', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pescadores.estadocivil')),
                ('estrutura_residencial', models.ManyToManyField(blank=True, to='pescadores.itemestruturaresidencial')),
                ('fornecedores_insumos', models.ManyToManyField(blank=True, to='pescadores.fornecedorinsumos')),
                ('frequencia_consumo_pescado', models.ManyToManyField(blank=True, to='pescadores.frequenciaconsumo')),
                ('frequencia_pesca', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pescadores.frequenciapesca')),
                ('gostaria_fazer_caso_nao_fosse_pescador', models.ManyToManyField(blank=True, to='pescadores.gostariafazernaofossepescador')),
                ('habilidades_outras_areas', models.ManyToManyField(blank=True, to='pescadores.habilidadeoutraarea')),
                ('horario_pesca_mais_frequente', models.ManyToManyField(blank=True, to='pescadores.horariopesca')),
                ('local_tratamento', models.ManyToManyField(blank=True, to='pescadores.localtratamento')),
                ('motivacao', models.ManyToManyField(blank=True, to='pescadores.motivacaopesca')),
                ('motivo_nao_participou_oficinas', models.ManyToManyField(blank=True, to='pescadores.motivonaoparticipouoficinas')),
                ('motivos_filhos_seguissem_profissao', models.ManyToManyField(blank=True, to='pescadores.motivofilhoseguirprofissao')),
                ('opiniao_oficinas', models.ManyToManyField(blank=True, to='pescadores.opiniaooficinas')),
                ('pescador', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='pescadores.pescador')),
                ('recursos_para_compra_insumos', models.ManyToManyField(blank=True, to='pescadores.recursoparacomprainsumos')),
                ('parentes_pescadores', models.ManyToManyField(blank=True, to='pescadores.relacaoparentesco')),
                ('com_quem_aprendeu', models.ManyToManyField(blank=True, to='pescadores.relacaotutor')),
                ('tipo_de_residencia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pescadores.tiporesidencia')),
                ('tipo_seguro_defeso', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pescadores.tiposegurodefeso')),
                ('transporte', models.ManyToManyField(blank=True, to='pescadores.transporte')),
                ('unidade_beneficiamento', models.ManyToManyField(blank=True, to='pescadores.unidadebeneficiamento')),
            ],
            options={
                'verbose_name_plural': 'pescadores especialistas',
            },
        ),
        migrations.CreateModel(
            name='Porto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('municipio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='portos', to='pescadores.municipio')),
            ],
        ),
        migrations.AddField(
            model_name='pescador',
            name='porto_desembarque_principal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pescadores.porto'),
        ),
        migrations.AddField(
            model_name='pescador',
            name='programas_sociais',
            field=models.ManyToManyField(blank=True, to='pescadores.programasocial'),
        ),
        migrations.AddField(
            model_name='pescador',
            name='projeto',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pescadores.projeto'),
        ),
        migrations.CreateModel(
            name='Telefone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20, validators=[pescadores.validators.only_numeric_chars])),
                ('pescador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telefones', to='pescadores.pescador')),
            ],
        ),
        migrations.CreateModel(
            name='Companhia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('especialista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pescadores.pescadorespecialista')),
                ('relacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pescadores.relacaocompanhia')),
            ],
            options={
                'unique_together': {('especialista', 'relacao')},
            },
        ),
        migrations.CreateModel(
            name='ParentePescador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('especialista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pescadores.pescadorespecialista')),
                ('relacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pescadores.relacaoparentesco')),
            ],
            options={
                'verbose_name_plural': 'parentes pescadores',
                'unique_together': {('especialista', 'relacao')},
            },
        ),
        migrations.CreateModel(
            name='Renda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.CharField(choices=[('nd', 'Não declarado'), ('subsitencia', 'Subsistência'), ('meio', 'Até 1/2 salário mínimo'), ('meio_um', 'De 1/2 a 1 salário mínimo'), ('um', '1 salário mínimo'), ('dois', 'De 1 a 2 salários mínimos'), ('tres', 'De 2 a 3 salários mínimos'), ('quatro', 'De 3 a 4 salários mínimos'), ('cinco', 'De 4 a 5 salários mínimos'), ('mais', 'Maior que 5 salários mínimos')], max_length=20, null=True)),
                ('fonte', models.CharField(choices=[('pesca', 'Pesca'), ('agricultura', 'Agricultor(a)'), ('aposentadoria', 'Aposentado(a)'), ('comerciante', 'Comerciante'), ('construcao_civil', 'Contrução civil'), ('faxina', 'Diarista/faxineiro(a)'), ('mecanica', 'Mecânico(a)')], max_length=20, null=True)),
                ('pescador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rendas', to='pescadores.pescador')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('pescador', 'fonte'), name='unique_pescador_fonte_constraint')],
            },
        ),
        migrations.CreateModel(
            name='RendaDuranteDefeso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('fonte', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pescadores.fonterendadurantedefeso')),
                ('pescador_especialista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rendas_durante_defeso', to='pescadores.pescadorespecialista')),
            ],
            options={
                'verbose_name': 'renda durante o defeso',
                'verbose_name_plural': 'rendas durante o defeso',
                'unique_together': {('fonte', 'pescador_especialista')},
            },
        ),
        migrations.CreateModel(
            name='InsumoDoPescador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('pescador_especialista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insumos', to='pescadores.pescadorespecialista')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pescadores.tipoinsumo')),
            ],
            options={
                'verbose_name': 'insumo',
                'verbose_name_plural': 'insumos',
                'unique_together': {('tipo', 'pescador_especialista')},
            },
        ),
    ]
